{"ast":null,"code":"var _jsxFileName = \"A:\\\\React\\\\my-poject\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddUser from \"./components/Users/AddUser\";\nimport UsersList from \"./components/Users/UsersList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [usersList, setUsersList] = useState([]);\n\n  const addUserHandler = (uName, uAge) => {\n    setUsersList(prevUsersList => {\n      return [...prevUsersList, {\n        name: uName,\n        age: uAge,\n        id: Math.random().toString()\n      }];\n    }); //when your state updates relies on the previous state you wanna use a aletrntive form of userslist you wanna use function form where you pass a function to setusers list \n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddUser, {\n      onAddUser: addUserHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UsersList, {\n      users: usersList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NgkqpNlTMjx6ze734YwQkD1z0Jo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["A:/React/my-poject/src/App.js"],"names":["React","useState","AddUser","UsersList","App","usersList","setUsersList","addUserHandler","uName","uAge","prevUsersList","name","age","id","Math","random","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAK,CAACC,SAAD,EAAWC,YAAX,IAAyBL,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMM,cAAc,GAAC,CAACC,KAAD,EAAOC,IAAP,KAAc;AACjCH,IAAAA,YAAY,CAAEI,aAAD,IAAiB;AAC5B,aAAO,CAAC,GAAGA,aAAJ,EAAkB;AAACC,QAAAA,IAAI,EAACH,KAAN;AAAYI,QAAAA,GAAG,EAACH,IAAhB;AAAqBI,QAAAA,EAAE,EAACC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAAxB,OAAlB,CAAP;AACD,KAFW,CAAZ,CADiC,CAG9B;AACJ,GAJD;;AAKA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAET;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAbQD,G;;KAAAA,G;AAeT,eAAeA,GAAf","sourcesContent":["import React,{useState} from \"react\";\nimport AddUser from \"./components/Users/AddUser\";\nimport UsersList from \"./components/Users/UsersList\";\n\nfunction App() {\n  const[usersList,setUsersList]=useState([]);\n  const addUserHandler=(uName,uAge)=>{\n    setUsersList((prevUsersList)=>{\n      return [...prevUsersList,{name:uName,age:uAge,id:Math.random().toString()}]\n    });//when your state updates relies on the previous state you wanna use a aletrntive form of userslist you wanna use function form where you pass a function to setusers list \n  }\n  return (\n    <div>\n      <AddUser onAddUser={addUserHandler}></AddUser>\n      <UsersList users={usersList}></UsersList>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}